{"version":3,"file":"ngx-swiper-wrapper.umd.js","sources":["../src/lib/swiper.interfaces.ts","../src/lib/swiper.directive.ts","../src/lib/swiper.component.ts","../src/lib/swiper.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const SWIPER_CONFIG = new InjectionToken<SwiperConfigInterface>('SWIPER_CONFIG');\n\nexport const SwiperEvents = [\n  'init',\n  'beforeDestroy',\n\n  'scroll',\n  'progress',\n  'keyPress',\n\n  'beforeResize',\n  'afterResize',\n\n  'resize',\n  'breakpoint',\n  'beforeResize',\n\n  'keyPress',\n  'sliderMove',\n  'slideChange',\n\n  'setTranslate',\n  'setTransition',\n\n  'fromEdge',\n  'reachEnd',\n  'reachBeginning',\n\n  'autoplay',\n  'autoplayStop',\n  'autoplayStart',\n\n  'imagesReady',\n  'lazyImageLoad',\n  'lazyImageReady',\n\n  'scrollDragEnd',\n  'scrollDragMove',\n  'scrollDragStart',\n\n  'swiperTap',\n  'swiperClick',\n  'swiperDoubleTap',\n  'swiperTouchEnd',\n  'swiperTouchMove',\n  'swiperTouchStart',\n  'swiperTouchMoveOpposite',\n  'swiperTransitionEnd',\n  'swiperTransitionStart',\n\n  'slideNextTransitionEnd',\n  'slideNextTransitionStart',\n  'slidePrevTransitionEnd',\n  'slidePrevTransitionStart',\n  'slideChangeTransitionEnd',\n  'slideChangeTransitionStart'\n];\n\nexport interface SwiperConfigInterface {\n  // Not supported by the wrapper:\n  // init\n  // on\n\n  // Swiper parameters\n  initialSlide?: number,\n  direction?: string,\n  speed?: number,\n  setWrapperSize?: boolean,\n  virtualTranslate?: boolean,\n  width?: number,\n  height?: number,\n  autoHeight?: boolean,\n  roundLengths?: boolean,\n  nested?: boolean,\n  uniqueNavElements?: boolean,\n  effect?: string,\n  runCallbacksOnInit?: boolean,\n\n  // Slides grid\n  spaceBetween?: number,\n  slidesPerView?: number | 'auto',\n  slidesPerColumn?: number,\n  slidesPerColumnFill?: string,\n  slidesPerGroup?: number,\n  centeredSlides?: boolean,\n  slidesOffsetBefore?: number,\n  slidesOffsetAfter?: number,\n  normalizeSlideIndex?: boolean,\n\n  // Grab cursor\n  grabCursor?: boolean,\n\n  // Touches\n  touchEventsTarget?: string,\n  touchRatio?: number,\n  touchAngle?: number,\n  simulateTouch?: boolean,\n  shortSwipes?: boolean,\n  longSwipes?: boolean,\n  longSwipesRatio?: number,\n  longSwipesMs?: number,\n  followFinger?: boolean,\n  allowTouchMove?: boolean,\n  threshold?: number,\n  touchMoveStopPropagation?: boolean,\n  iOSEdgeSwipeDetection?: boolean,\n  iOSEdgeSwipeThreshold?: number,\n  touchReleaseOnEdges?: boolean,\n  passiveListeners?: boolean,\n\n  // Touch resistance\n  resistance?: boolean,\n  resistanceRatio?: number,\n\n  // Swiping / no swiping\n  allowSlidePrev?: boolean,\n  allowSlideNext?: boolean,\n  noSwiping?: boolean,\n  noSwipingClass?: string,\n  swipeHandler?: string | HTMLElement,\n\n  // Clicks\n  preventClicks?: boolean,\n  preventClicksPropagation?: boolean,\n  slideToClickedSlide?: boolean,\n\n  // Freemode\n  freeMode?: boolean,\n  freeModeMomentum?: boolean,\n  freeModeMomentumRatio?: number,\n  freeModeMomentumVelocityRatio?: number,\n  freeModeMomentumBounce?: boolean,\n  freeModeMomentumBounceRatio?: number,\n  freeModeMinimumVelocity?: number,\n  freeModeSticky?: boolean,\n\n  // Progress\n  watchSlidesProgress?: boolean,\n  watchSlidesVisibility?: boolean,\n\n  // Images\n  preloadImages?: boolean,\n  updateOnImagesReady?: boolean,\n\n  // Loop\n  loop?: boolean,\n  loopAdditionalSlides?: number,\n  loopedSlides?: number,\n  loopFillGroupWithBlank?: boolean,\n\n  // Breakpoints\n  breakpoints?: SwiperBreakpointsInterface,\n\n  // Observer\n  observer?: boolean,\n  observeParents?: boolean,\n\n  // Namespace\n  containerModifierClass?: string,\n  slideClass?: string,\n  slideActiveClass?: string,\n  slideDuplicatedActiveClass?: string,\n  slideVisibleClass?: string,\n  slideDuplicateClass?: string,\n  slideNextClass?: string,\n  slideDuplicatedNextClass?: string,\n  slidePrevClass?: string,\n  slideDuplicatedPrevClass?: string,\n  wrapperClass?: string,\n\n  // Effects\n  fadeEffect?: SwiperFadeEffectInterface,\n  flipEffect?: SwiperFlipEffectInterface,\n  cubeEffect?: SwiperCubeEffectInterface,\n  coverflowEffect?: SwiperCoverflowEffectInterface\n\n  // Components\n  parallax?: boolean,\n  keyboard?: boolean,\n\n  a11y?: boolean | SwiperA11YInterface,\n  lazy?: boolean | SwiperLazyInterface,\n  zoom?: boolean | SwiperZoomInterface,\n  history?: boolean | SwiperHistoryInterface,\n  virtual?: boolean | SwiperVirtualInterface,\n  autoplay?: boolean | SwiperAutoplayInterface,\n  scrollbar?: boolean | SwiperScrollbarInterface,\n  mousewheel?: boolean | SwiperMousewheelInterface,\n  controller?: boolean | SwiperControllerInterface,\n  navigation?: boolean | SwiperNavigationInterface,\n  pagination?: boolean | SwiperPaginationInterface,\n  hashNavigation?: boolean | SwiperHashNavigationInterface\n}\n\nexport interface SwiperA11YInterface {\n  prevSlideMessage?: string,\n  nextSlideMessage?: string,\n  firstSlideMessage?: string,\n  lastSlideMessage?: string,\n  paginationBulletMessage?: string,\n  notificationClass?: string\n}\n\nexport interface SwiperLazyInterface {\n  loadPrevNext?: boolean,\n  loadPrevNextAmount?: number,\n  loadOnTransitionStart?: boolean,\n  elementClass?: string,\n  loadingClass?: string,\n  loadedClass?: string,\n  preloaderClass?: string\n}\n\nexport interface SwiperZoomInterface {\n  maxRatio?: number,\n  minRatio?: number,\n  toggle?: boolean,\n  containerClass?: string,\n  zoomedSlideClass?: string\n}\n\nexport interface SwiperHistoryInterface {\n  replaceState?: boolean,\n  key?: string\n}\n\nexport interface SwiperVirtualInterface {\n  slides?: any[],\n  cache?: boolean,\n  renderSlide?: SwiperRenderSlideFunction,\n  renderExternal?: SwiperRenderExternalFunction\n}\n\nexport interface SwiperAutoplayInterface {\n  delay?: number,\n  stopOnLast?: boolean,\n  disableOnInteraction?: boolean\n}\n\nexport interface SwiperScrollbarInterface {\n  el?: string | HTMLElement,\n  hide?: boolean,\n  draggable?: boolean,\n  snapOnRelease?: boolean,\n  dragSize?: number | 'auto'\n}\n\nexport interface SwiperControllerInterface {\n  control?: any,\n  inverse?: boolean,\n  by?: 'slide' | 'container'\n}\n\nexport interface SwiperNavigationInterface {\n  nextEl?: string | HTMLElement,\n  prevEl?: string | HTMLElement,\n  hideOnClick?: boolean,\n  disabledClass?: string,\n  hiddenClass?: string\n}\n\nexport interface SwiperPaginationInterface {\n  el?: string | HTMLElement,\n  type?: 'bullets' | 'fraction' | 'progressbar' | 'custom',\n  bulletElement?: string,\n  dynamicBullets?: boolean,\n  hideOnClick?: boolean,\n  clickable?: boolean,\n  renderBullet?: SwiperRenderBulletFunction,\n  renderFraction?: SwiperRenderFractionFunction,\n  renderProgressbar?: SwiperRenderProgressbarFunction,\n  renderCustom?: SwiperRenderCustomFunction,\n  bulletClass?: string,\n  bulletActiveClass?: string,\n  modifierClass?: string,\n  currentClass?: string,\n  totalClass?: string,\n  hiddenClass?: string,\n  progressbarFillClass?: string,\n  clickableClass?: string\n}\n\nexport interface SwiperMousewheelInterface {\n  forceToAxis?: boolean,\n  releaseOnEdges?: boolean,\n  invert?: boolean,\n  sensitivity?: number,\n  eventsTarget?: string | HTMLElement\n}\n\nexport interface SwiperHashNavigationInterface {\n  watchState?: boolean,\n  replaceState?: boolean\n}\n\nexport interface SwiperFadeEffectInterface {\n  crossFade?: boolean\n}\n\nexport interface SwiperFlipEffectInterface {\n  limitRotation?: boolean,\n  slideShadows?: boolean\n}\n\nexport interface SwiperCubeEffectInterface {\n  shadow?: boolean,\n  shadowScale?: number,\n  shadowOffset?: number,\n  slideShadows?: boolean\n}\n\nexport interface SwiperCoverflowEffectInterface {\n  depth?: number,\n  rotate?: number,\n  stretch?: number,\n  modifier?: number,\n  slideShadows?: boolean\n}\n\nexport interface SwiperBreakpointsInterface {\n  [size: number]: SwiperConfigInterface\n}\n\nexport class SwiperConfig implements SwiperConfigInterface {\n  // Not supported by the wrapper:\n  // public init\n  // public on\n\n  // Swiper parameters\n  public initialSlide: number;\n  public direction: string;\n  public speed: number;\n  public setWrapperSize: boolean;\n  public virtualTranslate: boolean;\n  public width: number;\n  public height: number;\n  public autoHeight: boolean;\n  public roundLengths: boolean;\n  public nested: boolean;\n  public uniqueNavElements: boolean;\n  public effect: string;\n  public runCallbacksOnInit: boolean;\n\n  // Slides grid\n  public spaceBetween: number;\n  public slidesPerView: number | 'auto';\n  public slidesPerColumn: number;\n  public slidesPerColumnFill: string;\n  public slidesPerGroup: number;\n  public centeredSlides: boolean;\n  public slidesOffsetBefore: number;\n  public slidesOffsetAfter: number;\n  public normalizeSlideIndex: boolean;\n\n  // Grab cursor\n  public grabCursor: boolean;\n\n  // Touches\n  public touchEventsTarget: string;\n  public touchRatio: number;\n  public touchAngle: number;\n  public simulateTouch: boolean;\n  public shortSwipes: boolean;\n  public longSwipes: boolean;\n  public longSwipesRatio: number;\n  public longSwipesMs: number;\n  public followFinger: boolean;\n  public allowTouchMove: boolean;\n  public threshold: number;\n  public touchMoveStopPropagation: boolean;\n  public iOSEdgeSwipeDetection: boolean;\n  public iOSEdgeSwipeThreshold: number;\n  public touchReleaseOnEdges: boolean;\n  public passiveListeners: boolean;\n\n  // Touch resistance\n  public resistance: boolean;\n  public resistanceRatio: number;\n\n  // Swiping / no swiping\n  public allowSlidePrev: boolean;\n  public allowSlideNext: boolean;\n  public noSwiping: boolean;\n  public noSwipingClass: string;\n  public swipeHandler: string | HTMLElement;\n\n  // Clicks\n  public preventClicks: boolean;\n  public preventClicksPropagation: boolean;\n  public slideToClickedSlide: boolean;\n\n  // Freemode\n  public freeMode: boolean;\n  public freeModeMomentum: boolean;\n  public freeModeMomentumRatio: number;\n  public freeModeMomentumVelocityRatio: number;\n  public freeModeMomentumBounce: boolean;\n  public freeModeMomentumBounceRatio: number;\n  public freeModeMinimumVelocity: number;\n  public freeModeSticky: boolean;\n\n  // Progress\n  public watchSlidesProgress: boolean;\n  public watchSlidesVisibility: boolean;\n\n  // Images\n  public preloadImages: boolean;\n  public updateOnImagesReady: boolean;\n\n  // Loop\n  public loop: boolean;\n  public loopAdditionalSlides: number;\n  public loopedSlides: number;\n  public loopFillGroupWithBlank: boolean;\n\n  // Breakpoints\n  public breakpoints: any;\n\n  // Observer\n  public observer: boolean;\n  public observeParents: boolean;\n\n  // Namespace\n  public containerModifierClass: string;\n  public slideClass: string;\n  public slideActiveClass: string;\n  public slideDuplicatedActiveClass: string;\n  public slideVisibleClass: string;\n  public slideDuplicateClass: string;\n  public slideNextClass: string;\n  public slideDuplicatedNextClass: string;\n  public slidePrevClass: string;\n  public slideDuplicatedPrevClass: string;\n  public wrapperClass: string;\n\n  // Effects\n  public fadeEffect: any;\n  public flipEffect: any;\n  public cubeEffect: any;\n  public coverflowEffect: any;\n\n  // Components\n  public parallax: boolean;\n  public keyboard: boolean;\n\n  public a11y: boolean | any;\n  public lazy: boolean | any;\n  public zoom: boolean | any;\n  public history: boolean | any;\n  public virtual: boolean | any;\n  public autoplay: boolean | any;\n  public scrollbar: boolean | any;\n  public mousewheel: boolean | any;\n  public controller: boolean | any;\n  public navigation: boolean | any;\n  public pagination: boolean | any;\n  public hashNavigation: boolean | any;\n\n  constructor(config: SwiperConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: SwiperConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] != null && !(Array.isArray(config[key])) &&\n          typeof config[key] === 'object' && !(config[key] instanceof HTMLElement))\n      {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n\nexport type SwiperRenderSlideFunction = (index: number) => HTMLElement;\nexport type SwiperRenderExternalFunction = (data: any) => void;\n\nexport type SwiperRenderCustomFunction = (current: number, total: number) => string;\n\nexport type SwiperRenderBulletFunction = (index: number, className: string) => string;\nexport type SwiperRenderFractionFunction = (currentClass: string, totalClass: string) => string;\nexport type SwiperRenderProgressbarFunction = (progressbarClass: string) => string;\n","import * as Swiper from 'swiper/dist/js/swiper.js';\n\nimport { Directive,\n  OnInit, DoCheck, OnDestroy, OnChanges,\n  Input, Output, HostBinding, EventEmitter,\n  NgZone, Renderer2, ElementRef, Optional, Inject,\n  SimpleChanges, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\n\nimport { SWIPER_CONFIG } from './swiper.interfaces';\n\nimport { SwiperEvents, SwiperConfig, SwiperConfigInterface } from './swiper.interfaces';\n\n@Directive({\n  selector: '[swiper]',\n  exportAs: 'ngxSwiper'\n})\nexport class SwiperDirective implements OnInit, DoCheck, OnDestroy, OnChanges {\n  private instance: any;\n\n  private configDiff: KeyValueDiffer<string, any>;\n\n  private initialIndex: number;\n\n  @Input()\n  set index(index: number) {\n    if (index != null) {\n      this.setIndex(index);\n    }\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Input('swiper') config: SwiperConfigInterface;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(private zone: NgZone, private elementRef: ElementRef, private differs: KeyValueDiffers,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngOnInit() {\n    const params = new SwiperConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    if (params.scrollbar === true) {\n      params.scrollbar = {\n        el: '.swiper-scrollbar'\n      };\n    }\n\n    if (params.pagination === true) {\n      params.pagination = {\n        el: '.swiper-pagination'\n      };\n    }\n\n    if (params.navigation === true) {\n      params.navigation = {\n        prevEl: '.swiper-button-prev',\n        nextEl: '.swiper-button-next'\n      };\n    }\n\n    if (this.initialIndex != null) {\n      params.initialSlide = this.initialIndex;\n\n      this.initialIndex = null;\n    }\n\n    params['on'] = {\n      slideChange: () => {\n        this.zone.run(() => {\n          if (this.instance) {\n            this.indexChange.emit(this.instance.realIndex);\n          }\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = new Swiper(this.elementRef.nativeElement, params);\n    });\n\n    this.S_INIT.emit(this.instance);\n\n    // Add native Swiper event handling\n    SwiperEvents.forEach((eventName) => {\n      eventName = eventName.replace('swiper', '');\n      eventName = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n\n      this.instance.on(eventName, (...args) => {\n        if (args.length === 1) {\n          args = args[0];\n        }\n\n        if (this[`S_${eventName.toUpperCase()}`]) {\n          this.zone.run(() => {\n            this[`S_${eventName.toUpperCase()}`].emit(args);\n          });\n        }\n      });\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngDoCheck() {\n    if (this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes) {\n        this.initialIndex = this.getIndex(true);\n\n        this.ngOnDestroy();\n\n        this.ngOnInit();\n\n        this.update();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.destroy(true, true);\n      });\n\n      this.instance = null;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.instance && changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        if (changes['disabled'].currentValue === true) {\n          this.zone.runOutsideAngular(() => {\n            this.instance.lockSwipes();\n          });\n        } else if (changes['disabled'].currentValue === false) {\n          this.zone.runOutsideAngular(() => {\n            this.instance.unlockSwipes();\n          });\n        }\n      }\n    }\n  }\n\n  public swiper(): any {\n    return this.instance;\n  }\n\n  public update() {\n    setTimeout(() => {\n      if (this.instance) {\n        this.zone.runOutsideAngular(() => {\n          this.instance.update();\n        });\n      }\n    }, 0);\n  }\n\n  public getIndex(real?: boolean) {\n    if (!this.instance) {\n      return this.initialIndex;\n    } else {\n      return real ? this.instance.realIndex : this.instance.activeIndex;\n    }\n  }\n\n  public setIndex(index: number, speed?: number, silent?: boolean) {\n    if (!this.instance) {\n      this.initialIndex = index;\n    } else {\n      let realIndex = index * this.instance.params.slidesPerGroup;\n\n      if (this.instance.params.loop) {\n        realIndex += this.instance.loopedSlides;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideTo(realIndex, speed, !silent);\n      });\n    }\n  }\n\n  public prevSlide(speed?: number, silent?: boolean) {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slidePrev(speed, !silent);\n      });\n    }\n  }\n\n  public nextSlide(speed?: number, silent?: boolean) {\n    if (this.instance) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.slideNext(speed, !silent);\n      });\n    }\n  }\n\n  public stopAutoplay(reset?: boolean) {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.stop();\n      });\n    }\n  }\n\n  public startAutoplay(reset?: boolean) {\n    if (reset) {\n      this.setIndex(0);\n    }\n\n    if (this.instance && this.instance.autoplay) {\n      this.zone.runOutsideAngular(() => {\n        this.instance.autoplay.start();\n      });\n    }\n  }\n}\n","import { Component, ViewEncapsulation,\n  OnInit, OnDestroy, Input, Output, HostBinding, EventEmitter, ViewChild,\n  NgZone, Renderer2, ElementRef, Optional, Inject } from '@angular/core';\n\nimport { SWIPER_CONFIG } from './swiper.interfaces';\n\nimport { SwiperDirective } from './swiper.directive';\n\nimport { SwiperConfig, SwiperConfigInterface, SwiperRenderBulletFunction } from './swiper.interfaces';\n\n@Component({\n  selector: 'swiper',\n  exportAs: 'ngxSwiper',\n  templateUrl: './lib/swiper.component.html',\n  styleUrls: [ './lib/swiper.component.css' ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SwiperComponent implements OnInit, OnDestroy {\n  private mo: any;\n\n  public swiperConfig: any;\n  public paginationConfig: any;\n\n  @Input() index: number = null;\n\n  @Input() disabled: boolean = false;\n\n  @Input() config: SwiperConfigInterface;\n\n  @Input() useSwiperClass: boolean = true;\n\n  @Output() indexChange = new EventEmitter<number>();\n\n  @ViewChild('swiperSlides') swiperSlides: ElementRef;\n\n  @ViewChild(SwiperDirective) directiveRef: SwiperDirective;\n\n  get isAtLast(): boolean {\n    return (!this.directiveRef || !this.directiveRef.swiper) ?\n      false : this.directiveRef.swiper['isEnd'];\n  }\n\n  get isAtFirst(): boolean {\n    return (!this.directiveRef || !this.directiveRef.swiper) ?\n      false : this.directiveRef.swiper['isBeginning'];\n  }\n\n  @Output('init'                       ) S_INIT                           = new EventEmitter<any>();\n  @Output('beforeDestroy'              ) S_BEFOREDESTROY                  = new EventEmitter<any>();\n\n  @Output('scroll'                     ) S_SCROLL                         = new EventEmitter<any>();\n  @Output('progress'                   ) S_PROGRESS                       = new EventEmitter<any>();\n\n  @Output('resize'                     ) S_RESIZE                         = new EventEmitter<any>();\n  @Output('breakpoint'                 ) S_BREAKPOINT                     = new EventEmitter<any>();\n  @Output('beforeResize'               ) S_BEFORERESIZE                   = new EventEmitter<any>();\n\n  @Output('keyPress'                   ) S_KEYPRESS                       = new EventEmitter<any>();\n  @Output('sliderMove'                 ) S_SLIDERMOVE                     = new EventEmitter<any>();\n  @Output('slideChange'                ) S_SLIDECHANGE                    = new EventEmitter<any>();\n\n  @Output('setTranslate'               ) S_SETTRANSLATE                   = new EventEmitter<any>();\n  @Output('setTransition'              ) S_SETTRANSITION                  = new EventEmitter<any>();\n\n  @Output('fromEdge'                   ) S_FROMEDGE                       = new EventEmitter<any>();\n  @Output('reachEnd'                   ) S_REACHEND                       = new EventEmitter<any>();\n  @Output('reachBeginning'             ) S_REACHBEGINNING                 = new EventEmitter<any>();\n\n  @Output('autoplay'                   ) S_AUTOPLAY                       = new EventEmitter<any>();\n  @Output('autoplayStart'              ) S_AUTOPLAYSTART                  = new EventEmitter<any>();\n  @Output('autoplayStop'               ) S_AUTOPLAYSTOP                   = new EventEmitter<any>();\n\n  @Output('imagesReady'                ) S_IMAGESREADY                    = new EventEmitter<any>();\n  @Output('lazyImageLoad'              ) S_LAZYIMAGELOAD                  = new EventEmitter<any>();\n  @Output('lazyImageReady'             ) S_LAZYIMAGEREADY                 = new EventEmitter<any>();\n\n  @Output('scrollDragEnd'              ) S_SCROLLDRAGEND                  = new EventEmitter<any>();\n  @Output('scrollDragMove'             ) S_SCROLLDRAGMOVE                 = new EventEmitter<any>();\n  @Output('scrollDragStart'            ) S_SCROLLDRAGSTART                = new EventEmitter<any>();\n\n  @Output('swiperTap'                  ) S_TAP                            = new EventEmitter<any>();\n  @Output('swiperClick'                ) S_CLICK                          = new EventEmitter<any>();\n  @Output('swiperDoubleTap'            ) S_DOUBLETAP                      = new EventEmitter<any>();\n  @Output('swiperTouchEnd'             ) S_TOUCHEND                       = new EventEmitter<any>();\n  @Output('swiperTouchMove'            ) S_TOUCHMOVE                      = new EventEmitter<any>();\n  @Output('swiperTouchStart'           ) S_TOUCHSTART                     = new EventEmitter<any>();\n  @Output('swiperTouchMoveOpposite'    ) S_TOUCHMOVEOPPOSITE              = new EventEmitter<any>();\n  @Output('swiperTransitionEnd'        ) S_TRANSITIONEND                  = new EventEmitter<any>();\n  @Output('swiperTransitionStart'      ) S_TRANSITIONSTART                = new EventEmitter<any>();\n\n  @Output('slidePrevTransitionEnd'     ) S_SLIDEPREVTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slidePrevTransitionStart'   ) S_SLIDEPREVTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideNextTransitionEnd'     ) S_SLIDENEXTTRANSITIONEND         = new EventEmitter<any>();\n  @Output('slideNextTransitionStart'   ) S_SLIDENEXTTRANSITIONSTART       = new EventEmitter<any>();\n  @Output('slideChangeTransitionEnd'   ) S_SLIDECHANGETRANSITIONEND       = new EventEmitter<any>();\n  @Output('slideChangeTransitionStart' ) S_SLIDECHANGETRANSITIONSTART     = new EventEmitter<any>();\n\n  constructor(private zone: NgZone, private renderer: Renderer2, private elementRef: ElementRef,\n    @Optional() @Inject(SWIPER_CONFIG) private defaults: SwiperConfigInterface) {}\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      this.updateClasses();\n\n      this.mo = new MutationObserver((mutations) => {\n        this.updateClasses();\n      });\n\n      this.mo.observe(this.swiperSlides.nativeElement, { childList: true });\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.mo) {\n      this.mo.disconnect();\n    }\n  }\n\n  public getConfig() {\n    this.swiperConfig = new SwiperConfig(this.defaults);\n\n    this.swiperConfig.assign(this.config); // Custom configuration\n\n    if (this.swiperConfig.pagination === true ||\n       (this.swiperConfig.pagination && typeof this.swiperConfig.pagination === 'object' &&\n       (!this.swiperConfig.pagination.type || this.swiperConfig.pagination.type === 'bullets') &&\n       !this.swiperConfig.pagination.renderBullet && this.swiperConfig.pagination.el === '.swiper-pagination'))\n    {\n      this.config = this.config || {};\n\n      if (!this.paginationConfig) {\n        this.paginationConfig = {\n          el: '.swiper-pagination',\n\n          renderBullet: (index: number, className: string) => {\n            const children = this.swiperSlides.nativeElement.children;\n\n            let bullet = `<span class=\"${className} ${className}-middle\" index=\"${index}\"></span>`;\n\n            if (index === 0) {\n              bullet = `<span class=\"${className} ${className}-first\" index=\"${index}\"></span>`;\n            } else if (index === (children.length - 1)) {\n              bullet = `<span class=\"${className} ${className}-last\" index=\"${index}\"></span>`;\n            }\n\n            return `<span class=\"swiper-pagination-handle\" index=\"${index}\">${bullet}</span>`;\n          }\n        };\n      }\n\n      if (this.swiperConfig.pagination === true) {\n        this.config.pagination = this.paginationConfig;\n      } else {\n        this.config.pagination = Object.assign({} , this.config.pagination, this.paginationConfig);\n      }\n    }\n\n    return this.config;\n  }\n\n  private updateClasses() {\n    let updateNeeded = false;\n\n    const children = this.swiperSlides.nativeElement.children;\n\n    for (let i = 0; i < children.length; i++) {\n      if (!children[i].classList.contains('swiper-slide')) {\n        updateNeeded = true;\n\n        children[i].classList.add('swiper-slide');\n      }\n    }\n\n    if (updateNeeded) {\n      this.directiveRef.update();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { SwiperComponent } from './swiper.component';\nimport { SwiperDirective } from './swiper.directive';\n\n@NgModule({\n  imports: [ CommonModule ],\n  declarations: [ SwiperComponent, SwiperDirective ],\n  exports: [ CommonModule, SwiperComponent, SwiperDirective ]\n})\nexport class SwiperModule {\n}\n"],"names":["InjectionToken","EventEmitter","Directive","NgZone","ElementRef","KeyValueDiffers","Optional","Inject","Input","Output","Component","ViewEncapsulation","Renderer2","ViewChild","NgModule","CommonModule"],"mappings":"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"}